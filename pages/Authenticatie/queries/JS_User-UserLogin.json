{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "UserLogin",
    "fullyQualifiedName": "JS_User.UserLogin",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Authenticatie",
    "collectionId": "Authenticatie_JS_User",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "() => {\n  return LogInUser.run().then(res => {\n    if (res.length > 0) {\n      UpdateInsertSessionID.run({\n        id: res[0].id\n      }).then(res => storeValue(\"userSession\", res[0])).then(() => navigateTo('Formulier - Werkplekinspectie', {}, \"SAME_WINDOW\")).catch(err => showAlert(JSON.stringify(err), 'error'));\n    } else {\n      showAlert('Gebruikersnaam of wachtwoord ongeldig');\n    }\n  }).catch(err => showAlert(JSON.stringify(err), 'error'));\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "() => {\n  return LogInUser.run().then(res => {\n    if (res.length > 0) {\n      UpdateInsertSessionID.run({\n        id: res[0].id\n      }).then(res => storeValue(\"userSession\", res[0])).then(() => navigateTo('Formulier - Werkplekinspectie', {}, \"SAME_WINDOW\")).catch(err => showAlert(JSON.stringify(err), 'error'));\n    } else {\n      showAlert('Gebruikersnaam of wachtwoord ongeldig');\n    }\n  }).catch(err => showAlert(JSON.stringify(err), 'error'));\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Authenticatie_JS_User.UserLogin",
  "deleted": false,
  "gitSyncId": "63aac04e67086437e017196b_63b40d5bb4cde27268a7f76e"
}